AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  cfchecker:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri: .
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Timeout: 3
      Environment:
        Variables:
          TRIGGER_STATUS: 'CREATE_FAILED, ROLLBACK_FAILED, DELETE_FAILED, UPDATE_ROLLBACK_FAILED'
      Events:
        Timer:
          Properties:
            Schedule: cron(*/5 * ? * MON-FRI *)
          Type: Schedule
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Resource:
            - '*'
          Version: '2012-10-17'
        PolicyName: AssumeRole
      - PolicyDocument:
          Statement:
          - Action:
            - cloudformation:DescribeStacks
            Effect: Allow
            Resource:
            - '*'
          Version: '2012-10-17'
        PolicyName: cloudformation
      - PolicyName: LogsAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            -
              Effect: "Allow"
              Resource:
                - "*"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"


